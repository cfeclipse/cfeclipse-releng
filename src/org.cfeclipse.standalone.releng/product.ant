<project>
	<import file="${buckminster.pdetasks}"/>
	
	<pathconvert property="equinox.launcher.jar">
		<first count="1">
			<sort>
				<fileset dir="${eclipse.home}/plugins" includes="**/org.eclipse.equinox.launcher_*.jar"/>
				<reverse xmlns="antlib:org.apache.tools.ant.types.resources.comparators">
					<date/>
				</reverse>
			</sort>
		</first>
	</pathconvert>

	<target name="create.product">
		
        <property name="product.install.directory" location="${sp:destination}" />
        <delete dir="${product.install.directory}" includeemptydirs="true" failonerror="false" />
        <mkdir dir="${product.install.directory}" />
        <buckminster.valuepath value="${fs:repositories}" id="repositories.valuepath" />
        <pathconvert 
                pathsep="," 
                targetos="unix"
                property="product.repositories" 
                refid="repositories.valuepath">
            <map from="" to="file:/" />
        </pathconvert>
        <echoproperties />
        <echo message="Repositories: ${product.repositories}" />
        <echo message="Install Dir : ${product.install.directory}" />
 
        <p2.director 
            destination="${product.install.directory}" 
            metadataRepository="${product.repositories}" 
            artifactRepository="${product.repositories}" 
            profile="${profile}" 
            arch="${target.arch}" 
            os="${target.os}" 
            ws="${target.ws}" 
            roaming="true" 
            extraarguments="-profileProperties org.eclipse.update.install.features=true">
            <iu id="${iu}" />
        </p2.director>		
		
		<property name="destination" location="${sp:destination}"/>
		<delete dir="${destination}"/>
		<makeurl property="repository" file="${sp:repository}"/>
		<mkdir dir="${destination}"/>

		<echoproperties/>

		<echo message="Launcher: ${equinox.launcher.jar}"/>
		<echo message="Repository: ${repository}"/>
		<echo message="Destination: ${destination}"/>
		<echo message="Profile: ${profile}"/>
		<echo message="iu: ${iu}"/>
		<echo message="java -Declipse.p2.data.area=${destination}/p2 -Declipse.p2.profile=${profile} -cp ${equinox.launcher.jar} org.eclipse.equinox.launcher.Main -application org.eclipse.equinox.p2.director -artifactRepository ${repository}
-metadataRepository ${repository} -destination ${destination} -bundlepool ${destination} -profile ${profile} 
-profileProperties org.eclipse.update.install.features=true -installIU ${iu} -p2.os ${target.os} -p2.ws ${target.ws} -p2.arch ${target.arch}
-consoleLog"/>
		<echo message="Configured OS -- os: ${target.os} ws: ${target.ws} arch:${target.arch}"/>
		<java classname="org.eclipse.equinox.launcher.Main" classpath="${equinox.launcher.jar}" fork="true" logError="true" failonerror="false" outputproperty="laugh">
			<arg value="-application"/>
			<arg value="org.eclipse.equinox.p2.director"/>
			<arg value="-artifactRepository"/>
			<arg value="${repository}"/>
			<arg value="-metadataRepository"/>
			<arg value="${repository}"/>
			<!--
			<arg value="-repository"/>
			<arg value="${repository},http://download.eclipse.org/releases/indigo"/>
			-->
			<arg value="-destination"/>
			<arg value="${destination}"/>
			<arg value="-bundlepool"/>
			<arg value="${destination}"/>
			<arg value="-profile"/>
			<arg value="${profile}"/>
			<arg value="-profileProperties" />
			<arg value="org.eclipse.update.install.features=true" />
			<arg value="-installIU"/>
			<arg value="${iu}"/>
			<arg value="-p2.os" />
			<arg value="${target.os}" />
			<arg value="-p2.ws" />
			<arg value="${target.ws}" />
			<arg value="-p2.arch" />
			<arg value="${target.arch}" />
			<arg value="-consoleLog"/>
			<arg value="-roaming"/>
			<jvmarg value="-Declipse.p2.data.area=${destination}/p2"/>
			<jvmarg value="-Declipse.p2.profile=${profile}"/>
		</java>
		<echo message="${laugh}" />
	</target>

	<target name="create.product.zip">
		<dirname file="${sp:product.dir}" property="product.parent.dir"/>
		<basename file="${sp:product.dir}" property="relative.product.dir"/>
		<mkdir dir="${sp:action.output}"/>
		<exec dir="${product.parent.dir}" executable="zip" outputproperty="zip.output" failonerror="true">
			<arg value="-r"/>
			<arg value="-9"/>
			<arg value="${sp:action.output}${product.name}-${target.os}-${target.ws}-${target.arch}-${product.version}.zip"/>
			<arg value="${relative.product.dir}"/>
		</exec>
		<echo message="${zip.output}"/>
	</target>
	
	<target name="create.target.platform.repository">
	        <buckminster.targetPlatformLocation property="target.platform.location" />
	        <property name="target.platform.repository" value="file:/${sp:output}" />
	        <property name="repository.name" value="Target Platform Repository" />        
	        <p2.publish.featuresAndBundles 
	            repository="${target.platform.repository}" 
	            repositoryName="${repository.name}" 
	            source="${target.platform.location}" 
	            publishArtifacts="true" />
        <buckminster.publishJRE metadataRepository="${target.platform.repository}" publishArtifacts="false" />
    </target>	
</project>
