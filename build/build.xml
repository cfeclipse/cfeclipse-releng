<project name="distro.build" default="build" basedir="./" xmlns:antcontrib="antlib:net.sf.antcontrib">

	<!--
	<property name="featurename" value="org.cfeclipse.cfml.releng" />
	<property name="product.checkout.url" value="org.cfeclipse.cfml.releng" />
	-->
	<loadproperties srcfile="build.properties"/>
	<import file="${cfdistro.build.file}"/>

	<property name="deploy.quiet" value="true"/>
	<property name="site.suffix" value="-dev"/>
	<property name="generator.suffix" value="I"/>
	<property name="merge.site" value="true"/>
	<property name="plugin.p2.dir" value="${dist.dir}/update${site.suffix}"/>
	<property name="plugin.p2.release.dir" value="http://cfeclipse.org/update${site.suffix}"/>
	<property name="remote.cfeclipse.sites.dir" value="from.cfeclipse.properties"/>
	<property name="remote.p2.dir" value="${remote.sites.dir}/update${site.suffix}"/>
	<property name="standalone.p2.dir" location="${dist.dir}/standalone-update${site.suffix}"/>
	<property name="standalone.p2.zip.dir" location="${dist.dir}/standalone-archivedsite${site.suffix}/"/>
	<property name="remote.cfeclipse.standalone.dir" value="from.cfeclipse.properties"/>
	<property name="remote.cfeclipse.standalone.zip.dir" value="${remote.standalone.dir}"/>
	<property name="remote.cfeclipse.standalone.p2.dir" value="${remote.standalone.dir}/update${site.suffix}"/>
	<property name="branchTagPath" value="master"/>
	
	<target name="clean.all">
		<delete dir="${dist.dir}"/>
		<delete dir="${basedir}/workspace"/>
		<delete dir="${basedir}/target-platform"/>
	</target>

	<target name="build">
		<abspath property="src.dir" path="${src.dir}" />
		<abspath property="dist.dir" path="${dist.dir}" />
		<abspath property="product.zip.dir" path="${dist.dir}/product" />
		<delete dir="${plugin.p2.dir}"/>
		<mkdir dir="${dist.dir}"/>
		<property name="script.dir" location="${src.dir}/org.cfeclipse.releng"/>
		<echo message="branchTagPath:${branchTagPath} site.suffix:${site.suffix} generator.suffix:${generator.suffix}"/>
		<bucky.headless script="${script.dir}/promote.bmscript">
			<sysproperty key="generator.suffix" value="${generator.suffix}" />
			<sysproperty key="branchTagPath" value="${branchTagPath}" />
			<sysproperty key="script.dir" value="${script.dir}" />
			<sysproperty key="src.dir" value="${src.dir}" />
			<sysproperty key="dist.dir" value="${dist.dir}" />
			<sysproperty key="product.zip.dir" value="${product.zip.dir}" />
			<sysproperty key="plugin.p2.dir" value="${plugin.p2.dir}" />
		</bucky.headless>
		
		<antcontrib:runtarget target="merge.site.if.true" />
		<antcontrib:runtarget target="p2.html" />
	</target>

	<target name="build.standalone">
		<abspath property="src.dir" path="${src.dir}" />
		<abspath property="dist.dir" path="${dist.dir}" />
		<abspath property="product.zip.dir" path="${dist.dir}/standalone" />
		<delete dir="${dist.dir}"/>
		<mkdir dir="${dist.dir}"/>
		<property name="script.dir" location="${src.dir}/org.cfeclipse.standalone.releng"/>
		<bucky.headless script="${script.dir}/product.bmscript">
			<sysproperty key="generator.suffix" value="${generator.suffix}" />
			<sysproperty key="branchTagPath" value="${branchTagPath}" />
			<sysproperty key="script.dir" value="${script.dir}" />
			<sysproperty key="src.dir" value="${src.dir}" />
			<sysproperty key="dist.dir" value="${dist.dir}" />
			<sysproperty key="product.zip.dir" value="${product.zip.dir}" />
			<sysproperty key="standalone.p2.dir" value="${standalone.p2.dir}" />
			<sysproperty key="standalone.p2.zip.dir" value="${standalone.p2.zip.dir}" />
			<sysproperty key="plugin.p2.dir" value="${plugin.p2.dir}" />
		</bucky.headless>
	</target>	

	<target name="merge.site.if.true">
		<abspath property="src.dir" path="${src.dir}" />
		<antcontrib:if>
			<equals arg1="${merge.site}" arg2="true"/>
			<then>
				<bucky.headless script="${src.dir}/org.cfeclipse.releng/merge.bmscript">
					<sysproperty key="plugin.p2.source" value="${plugin.p2.release.dir}" />
					<sysproperty key="plugin.p2.dest" value="${plugin.p2.dir}" />
				</bucky.headless>
			</then>
		</antcontrib:if>
	</target>

	<target name="build.release" depends="build.and.scp">
		<git command="log" dir="${src.dir}/cfeclipse" verbose="false" use-jgit="false"><args><arg value="-n"/><arg value="1"/><arg value="origin/${branchTagPath}"/></args></git>
		<antcontrib:propertyregex property="info.smaller"
			input="${git.results}" global="true"
			regexp="(?s)commit (\w{7}).+?Author\: (\w+[\w ]+).+?Date:.+?[\r\n]+[^\S]+(.+)"
			description="\1 is commit hash, \2 is author, \3 is message"
			select=" #CFML ${build.type} \2 > \3"
			casesensitive="false" />
		<!--
		<input message="Tweet:" defaultvalue="${info.smaller}" addproperty="tweet" />
		-->
		<path id="build.lib.path">
			<fileset dir="${basedir}/lib" includes="*.jar" />
		</path>
		<taskdef name="twitter" classname="de.ecw.ant.twitter.AntTwitterTask" classpathref="build.lib.path" />
		<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="build.lib.path" />
		<twitter message="${info.smaller}" 
			consumerKey="${remote.cfeclipse.twitter.consumer.key}" 
			consumerSecret="${remote.cfeclipse.twitter.consumer.secret}" 
			accessToken="${remote.cfeclipse.twitter.token}" 
			accessTokenSecret="${remote.cfeclipse.twitter.token.secret}" 
			bitlyUsername="bitly-username" 
			bitlyApiKey="bitly-key" 
			enableBitly="false" />
	</target>

	<target name="build.and.scp" depends="build">

		<antcontrib:var name="remote" value="cfeclipse"/>
		<cfdistro.setremote />
		<loadproperties srcfile="${src.dir}/org.cfeclipse.standalone.releng/build.properties"/>
		<echo message="scp update site"/>
		<deploy-scp toDir="${remote.user}@${remote.host}:${remote.p2.dir}" fromdir="${plugin.p2.dir}">
			<scpfiles>
				<fileset dir="${plugin.p2.dir}">
					<include name="**/*"/>
				</fileset>
			</scpfiles>
		</deploy-scp>
		
	</target>
	

	<target name="build.standalone.and.scp">

		<antcontrib:var name="remote" value="cfeclipse"/>
		<cfdistro.setremote />
		<loadproperties srcfile="${src.dir}/org.cfeclipse.standalone.releng/build.properties"/>

		<echo message="scp update standalone"/>
		<deploy-scp toDir="${remote.user}@${remote.host}:${remote.standalone.p2.dir}" fromdir="${standalone.p2.dir}">
			<scpfiles>
				<fileset dir="${standalone.p2.dir}">
					<include name="**/*"/>
				</fileset>
			</scpfiles>
		</deploy-scp>
		
		<echo message="scp standalone zip"/>
		<deploy-scp toDir="${remote.user}@${remote.host}:${remote.standalone.zip.dir}" fromdir="${dist.dir}/standalone/zip/">
			<scpfiles>
				<fileset dir="${dist.dir}/standalone/zip/">
					<include name="**/*"/>
				</fileset>
			</scpfiles>
		</deploy-scp>
	</target>

	<target name="p2.html">
		<echo file="${temp.dir}/p2files.txt"><![CDATA[<table cellspacing="0" cellpadding="0"><tr><td colspan="2" style="border-top:0px; padding-top:3px;padding-left:8px;"><em>Files</em></td></tr>]]>
		</echo>
		<antcontrib:for param="file">
			<path><fileset dir="${plugin.p2.dir}" includes="**/*.jar"/></path>
			<sequential>
				<antcontrib:propertyregex override="yes" property="p2file" input="@{file}" regexp=".*?${plugin.p2.dir}\/?(.+)" replace="\1"/>
 				<echo file="${temp.dir}/p2files.txt" append="true"><![CDATA[<tr><td valign="top" style="padding:5px"><a href="${p2file}">${p2file}</a></td><td valign="top" style="padding:5px"></td></tr>]]>
				</echo>
			</sequential>
	  	</antcontrib:for>
		<echo file="${temp.dir}/p2files.txt" append="true"><![CDATA[</table>]]></echo>
		<loadfile srcfile="${temp.dir}/p2files.txt" property="p2files.table" />
		<copy file="${src.dir}/org.cfeclipse.update/index.html" todir="${plugin.p2.dir}">
		    <filterchain><expandproperties /></filterchain>
		</copy>
		<replaceregexp file="${plugin.p2.dir}/index.html"
		match='(?s)&lt;div id="data"&gt;.*?&lt;\/div&gt;'
		replace='&lt;div id="data"&gt;${line.separator}${p2files.table}${line.separator}&lt;\/div&gt;' byline="false" />
		<delete dir="${temp.dir}" />		
	</target>

<!--
THIS IS THE ISSUE STUFF FOR DOCS - WHAT'S NEW
-->		
		
	<target name="update-whatsnew">
		<mkdir dir="${temp.dir}" />
		<property name="milestone.number" value="1"/>
		<get src="https://api.github.com/repos/cfeclipse/cfeclipse/issues?state=closed&amp;milestone=${milestone.number}" dest="${temp.dir}/tickets.json" />
		<json2xml file="${temp.dir}/tickets.json" property="tickets.xml" />
		<echo file="${temp.dir}/tickets.xml" message="${tickets.xml}" />
		<echo file="${temp.dir}/tickets.txt"><![CDATA[<table cellspacing="0" cellpadding="0"><tr><td colspan="2" style="border-top:0px; padding-top:3px;padding-left:8px;"><em>Closed Tickets</em></td></tr>]]>
		</echo>
		<xmltask source="${temp.dir}/tickets.xml" destbuffer="tickets">
			<call path="/json2xml/array/item">
				<param name="href" path="html_url/text()" />
				<param name="ticket" path="number/text()" />
				<param name="summary" path="title/text()" />
				<actions>
<echo file="${temp.dir}/tickets.txt" append="true"><![CDATA[<tr><td valign="top" style="padding:5px"><a href="@{href}">@{ticket}</a></td><td valign="top" style="padding:5px">@{summary}</td></tr>]]>
</echo>
				</actions>
			</call>
		</xmltask>
		<echo file="${temp.dir}/tickets.txt" append="true"><![CDATA[</table>]]></echo>
		<loadfile srcfile="${temp.dir}/tickets.txt" property="ticket.table" />
		<property name="whatsnewfile" location="${basedir}/../src/cfeclipse/org.cfeclipse.cfml/doc/intro/doc/new.html" />
		<replaceregexp file="${whatsnewfile}"
		match='(?s)&lt;!-- closedtickets --&gt;.*?&lt;!-- /closedtickets --&gt;' 
		replace="&lt;!-- closedtickets --&gt;${line.separator}${ticket.table}${line.separator}&lt;!-- /closedtickets --&gt;" byline="false" />
		<delete dir="${temp.dir}" />
	</target>
	
	
</project>
